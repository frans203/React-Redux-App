{"version":3,"sources":["components/Cart/CartItem.module.css","components/UI/Notification.module.css","components/Shop/ProductItem.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/ui-slice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","store/index.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","title","console","log","removeItemFromCart","filter","cartActions","actions","CartItem","dispatch","useDispatch","toFixed","itemprice","details","onClick","Cart","useSelector","cart","length","map","uiReducer","showCart","notification","showNotification","message","status","uiActions","CartButton","currentItems","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","Notification","specialClasses","error","success","pending","cssClasses","startLet","App","cartIsVisible","ui","useEffect","a","fetchData","fetch","response","ok","Error","json","data","cartData","sendRequest","method","body","JSON","stringify","sendCartData","store","configureStore","reducer","uiSlice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.152994b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__2NwsB\",\"details\":\"CartItem_details__1b6wk\",\"quantity\":\"CartItem_quantity__11EfT\",\"price\":\"CartItem_price__3HvpO\",\"itemprice\":\"CartItem_itemprice__31JvI\",\"actions\":\"CartItem_actions__3Gov7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__AfSvi\",\"error\":\"Notification_error__145pj\",\"success\":\"Notification_success__1IJsj\",\"pending\":\"Notification_pending__1aUoz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__3jiOo\",\"price\":\"ProductItem_price__1tmXK\",\"actions\":\"ProductItem_actions__3cCUh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__A4CCd\",\"badge\":\"CartButton_badge__3lmD5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1ufE8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3VKFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__2h9_E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1C-VJ\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    changed: false,\r\n  },\r\n\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      state.changed = true;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          title: newItem.title,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          price: newItem.price,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice += existingItem.price;\r\n      }\r\n\r\n      console.log(state.items);\r\n    },\r\n\r\n    removeItemFromCart(state, action) {\r\n      const { id } = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      state.changed = true;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice -= existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport default cartSlice;\r\nexport const cartActions = cartSlice.actions;\r\n","import classes from \"./CartItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n  const { title, quantity, totalPrice, price, id } = props.item;\n\n  const plusHandler = () => {\n    dispatch(\n      cartActions.addItemToCart({\n        title,\n        quantity,\n        price,\n        id,\n      })\n    );\n  };\n\n  const minusHandler = () => {\n    dispatch(cartActions.removeItemFromCart({ id }));\n  };\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${totalPrice.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={minusHandler}>-</button>\n          <button onClick={plusHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\nimport { useSelector } from \"react-redux\";\nconst Cart = (props) => {\n  const items = useSelector((state) => state.cart.items);\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {items.length === 0 && <h3>Nothing in your shopping cart!</h3>}\n        {items.map((item) => {\n          return (\n            <CartItem\n              key={item.id}\n              item={{\n                id: item.id,\n                title: item.title,\n                quantity: item.quantity,\n                totalPrice: item.totalPrice,\n                price: item.price,\n              }}\n            />\n          );\n        })}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst uiReducer = createSlice({\r\n  name: \"cart\",\r\n  initialState: { showCart: false, notification: null },\r\n  reducers: {\r\n    showCart(state) {\r\n      state.showCart = !state.showCart;\r\n    },\r\n    showNotification(state, action) {\r\n      state.notification = {\r\n        title: action.payload.title,\r\n        message: action.payload.message,\r\n        status: action.payload.status,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport default uiReducer;\r\nexport const uiActions = uiReducer.actions;\r\n","import classes from \"./CartButton.module.css\";\nimport { uiActions } from \"../../store/ui-slice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst CartButton = (props) => {\n  const currentItems = useSelector((state) => state.cart.totalQuantity);\n  const dispatch = useDispatch();\n  const cartBtnHandler = () => {\n    dispatch(uiActions.showCart());\n  };\n  return (\n    <button className={classes.button} onClick={cartBtnHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{currentItems}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from \"../Cart/CartButton\";\nimport classes from \"./MainHeader.module.css\";\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n  const { title, price, description, id } = props;\n  const addItemHandler = () => {\n    dispatch(\n      cartActions.addItemToCart({\n        title,\n        description,\n        price,\n        id,\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addItemHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\nconst DUMMY_PRODUCTS = [\n  {\n    id: \"p1\",\n    price: 6,\n    title: \"Book\",\n    description: \"The first book i ever wrote\",\n  },\n  {\n    id: \"p2\",\n    price: 5,\n    title: \"Book 2\",\n    description: \"The second book i ever wrote\",\n  },\n];\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map((item) => {\n          return (\n            <ProductItem\n              title={item.title}\n              id={item.id}\n              key={item.id}\n              price={item.price}\n              description={item.description}\n            />\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from \"./Notification.module.css\";\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = \"\";\r\n\r\n  if (props.status === \"error\") {\r\n    specialClasses = classes.error;\r\n  }\r\n  if (props.status === \"success\") {\r\n    specialClasses = classes.success;\r\n  }\r\n  if (props.status === \"pending\") {\r\n    specialClasses = classes.pending;\r\n  }\r\n  const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { Fragment, useEffect } from \"react\";\nimport { fetchCartData, sendCartData } from \"./store/cart-actions\";\nimport Notification from \"./components/UI/Notification\";\nlet startLet = false;\nfunction App() {\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n  const cartIsVisible = useSelector((state) => state.ui.showCart);\n  const notification = useSelector((state) => state.ui.notification);\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n    console.log(cart);\n  }, [dispatch]);\n  useEffect(() => {\n    if (!startLet) {\n      startLet = true;\n      return;\n    }\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          title={notification.title}\n          message={notification.message}\n          status={notification.status}\n        />\n      )}\n      <Layout>\n        {cartIsVisible && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { uiActions } from \"./ui-slice\";\r\nimport { cartActions } from \"./cart-slice\";\r\nexport const fetchCartData = () => {\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://react-http-9bce5-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Get cart data failed\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const cartData = await fetchData();\r\n      console.log(cartData);\r\n      dispatch(\r\n        cartActions.replaceCart({\r\n          items: cartData.items || [],\r\n          totalQuantity: cartData.totalQuantity || 0,\r\n        })\r\n      );\r\n    } catch (e) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          title: \"Error!\",\r\n          message: e.message,\r\n          status: \"error\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        title: \"pending...\",\r\n        message: \"Please await, getting data\",\r\n        status: \"pending\",\r\n      })\r\n    );\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://react-http-9bce5-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            items: cart.items,\r\n            totalQuantity: cart.totalQuantity,\r\n          }),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Send cart data failed\");\r\n      }\r\n    };\r\n\r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          title: \"Success\",\r\n          message: \"Data send successfuly!\",\r\n          status: \"sucess\",\r\n        })\r\n      );\r\n    } catch (e) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          title: \"Error!\",\r\n          message: e.message,\r\n          status: \"error\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport uiSlice from \"./ui-slice\";\r\nimport cartSlice from \"./cart-slice\";\r\nconst store = configureStore({\r\n  reducer: { ui: uiSlice.reducer, cart: cartSlice.reducer },\r\n});\r\n\r\nexport default store;\r\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}